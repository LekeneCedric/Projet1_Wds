{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Directive, forwardRef, ElementRef, NgZone, Input, Output, Renderer2, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/code-block.button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nconst codeBlockButtonStyle = `font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\nfont-size: 12px;\npadding: 14px 12px;\nmargin-bottom: 12px;\nline-height: 1.42857;\nword-break: break-all;\noverflow-wrap: break-word;\nbackground-color: rgb(250, 251, 253);\nborder: 1px solid rgb(234, 236, 240);\nborder-radius: 4px; color: #60a0b0;\nwhite-space: pre-wrap;`;\n/** @type {?} */\n\nconst codeBlockButton =\n/**\n* @param {?} context\n* @return {?}\n*/\nfunction (context) {\n  /** @type {?} */\n  const ui = $.summernote.ui; // create button\n\n  /** @type {?} */\n\n  const button = ui.button({\n    contents: '<i class=\"note-icon-frame\" style=\"margin-right: 4px\"></i> Code block',\n    tooltip: 'Add code block',\n    container: '.note-editor',\n    className: 'note-btn',\n    click:\n    /**\n    * @return {?}\n    */\n    function () {\n      /** @type {?} */\n      let selectedText = null; // The below code will copy the selected block and add it into our code block\n\n      if (window.getSelection) {\n        selectedText = window.getSelection().toString().replace(/^\\s+|\\s+$/g, '');\n      }\n      /** @type {?} */\n\n\n      const codeText = selectedText ? selectedText : `Place your code here.`;\n      /** @type {?} */\n\n      const codeBlock = `<pre class=\"code-block\" style=\"${codeBlockButtonStyle}\">${codeText}</pre>`;\n      context.invoke('editor.pasteHTML', codeBlock);\n    }\n  });\n  return button.render(); // return button as jquery object\n};\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-summernote.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass NgxSummernoteDirective {\n  /**\n   * @param {?} el\n   * @param {?} zone\n   * @param {?} http\n   */\n  constructor(el, zone, http) {\n    this.el = el;\n    this.zone = zone;\n    this.http = http; // summernoteModel directive as output: update model if editor contentChanged\n\n    this.summernoteModelChange = new EventEmitter();\n    this.imageUpload = new EventEmitter();\n    this.mediaDelete = new EventEmitter(); // // summernoteInit directive as output: send manual editor initialization\n    // @Output() summernoteInit: EventEmitter<Object> = new EventEmitter<Object>();\n\n    this.blur = new EventEmitter();\n    this._options = {};\n    this.SPECIAL_TAGS = ['img', 'button', 'input', 'a'];\n    this.INNER_HTML_ATTR = 'innerHTML';\n    this._oldModel = null; // Begin ControlValueAccesor methods.\n\n    this.onChange =\n    /**\n    * @param {?} _\n    * @return {?}\n    */\n    _ => {};\n\n    this.onTouched =\n    /**\n    * @return {?}\n    */\n    () => {};\n    /** @type {?} */\n\n\n    const element = el.nativeElement; // check if the element is a special tag\n\n    if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) !== -1) {\n      this._hasSpecialTag = true;\n    } // jquery wrap and store element\n    // this._$element = <any>$(element);\n\n\n    this.zone = zone;\n  }\n  /**\n   * @param {?} options\n   * @return {?}\n   */\n\n\n  set ngxSummernote(options) {\n    if (options) {\n      if (!options.buttons) {\n        options.buttons = {};\n      }\n\n      options.callbacks = Object.assign({}, options.callbacks, {\n        onImageUpload:\n        /**\n        * @param {?} files\n        * @return {?}\n        */\n        files => this.uploadImage(files),\n        onMediaDelete:\n        /**\n        * @param {?} files\n        * @return {?}\n        */\n        files => this.mediaDelete.emit({\n          url: $(files[0]).attr('src')\n        })\n      }); // add custom buttons\n\n      options.buttons.codeBlock = codeBlockButton;\n      Object.assign(this._options, options);\n    }\n  } // summernoteModel directive as input: store initial editor content\n\n  /**\n   * @param {?} content\n   * @return {?}\n   */\n\n\n  set summernoteModel(content) {\n    this.updateEditor(content);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    this.createEditor();\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    if (this._editorInitialized && changes) {\n      if (changes.ngxSummernoteDisabled && !changes.ngxSummernoteDisabled.firstChange && changes.ngxSummernoteDisabled.currentValue !== changes.ngxSummernoteDisabled.previousValue) {\n        if (changes.ngxSummernoteDisabled.currentValue) {\n          this._$element.summernote('disable');\n        } else {\n          this._$element.summernote('enable');\n        }\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this.destroyEditor();\n\n    if (this.uploadSub) {\n      this.uploadSub.unsubscribe();\n    }\n  } // Form model content changed.\n\n  /**\n   * @param {?} content\n   * @return {?}\n   */\n\n\n  writeValue(content) {\n    this.updateEditor(content);\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  } // Update editor with model contents.\n\n  /**\n   * @private\n   * @param {?} content\n   * @return {?}\n   */\n\n\n  updateEditor(content) {\n    if (JSON.stringify(this._oldModel) === JSON.stringify(content)) {\n      return;\n    }\n\n    this._oldModel = content; // this._$element.html(content);\n\n    if (this._editorInitialized) {\n      this._$element.summernote('code', content);\n    } else {\n      this._$element.html(content);\n    }\n  } // update model if editor contentChanged\n\n  /**\n   * @private\n   * @param {?=} content\n   * @return {?}\n   */\n\n\n  updateModel(content) {\n    // console.log('update model', content)\n    this.zone.run(\n    /**\n    * @return {?}\n    */\n    () => {\n      /** @type {?} */\n      let modelContent = null;\n\n      if (this._hasSpecialTag) {\n        /** @type {?} */\n        const attributeNodes = this._$element[0].attributes;\n        /** @type {?} */\n\n        const attrs = {};\n\n        for (let i = 0; i < attributeNodes.length; i++) {\n          /** @type {?} */\n          const attrName = attributeNodes[i].name;\n\n          if (this._options.angularIgnoreAttrs && this._options.angularIgnoreAttrs.indexOf(attrName) !== -1) {\n            continue;\n          }\n\n          attrs[attrName] = attributeNodes[i].value;\n        }\n\n        if (this._$element[0].innerHTML) {\n          attrs[this.INNER_HTML_ATTR] = this._$element[0].innerHTML;\n        }\n\n        modelContent = attrs;\n      } else {\n        /** @type {?} */\n        const returnedHtml = content || '';\n\n        if (typeof returnedHtml === 'string') {\n          modelContent = returnedHtml;\n        }\n      }\n\n      if (this._oldModel !== modelContent) {\n        this._oldModel = modelContent; // Update summernoteModel\n\n        this.summernoteModelChange.emit(modelContent); // Update form model.\n\n        this.onChange(content);\n      }\n    });\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  initListeners() {\n    /** @type {?} */\n    const self = this;\n\n    if (!this._$element) {\n      return;\n    }\n\n    this._$element.on('summernote.init',\n    /**\n    * @return {?}\n    */\n    function () {\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        self.updateModel();\n      }, 0);\n    });\n\n    this._$element.on('summernote.change',\n    /**\n    * @param {?} event\n    * @param {?} contents\n    * @param {?} $editable\n    * @return {?}\n    */\n    function (event, contents, $editable) {\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        self.updateModel(contents);\n      }, 0);\n    });\n\n    this._$element.on('summernote.blur',\n    /**\n    * @return {?}\n    */\n    function () {\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        self.onTouched();\n        self.blur.emit();\n      }, 0);\n    });\n\n    if (this._options.immediateAngularModelUpdate) {\n      this._editor.on('keyup',\n      /**\n      * @return {?}\n      */\n      function () {\n        setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          self.updateModel();\n        }, 0);\n      });\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  createEditor() {\n    if (this._editorInitialized) {\n      return;\n    }\n\n    this.setContent(true);\n    /** @type {?} */\n\n    const wait = 50; // this.initListeners(); // issue #31\n\n    try {\n      this._$element =\n      /** @type {?} */\n      $(this.el.nativeElement);\n    } catch (error) {\n      console.log(`JQuery seems not te loaded yet! Wait ${wait}ms and try again`);\n    }\n\n    if (!this._$element) {\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.createEditor();\n      }, wait);\n    } else {\n      // init editor\n      this.zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => {\n        this._editor = this._$element.summernote(this._options).data('summernote').$note;\n        this.initListeners(); // issue #31\n\n        if (this.ngxSummernoteDisabled) {\n          this._$element.summernote('disable');\n        }\n      });\n      this._editorInitialized = true;\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  setHtml() {\n    this._$element.summernote('code', this._model || '', true);\n  }\n  /**\n   * @private\n   * @param {?=} firstTime\n   * @return {?}\n   */\n\n\n  setContent(firstTime = false) {\n    // console.log('set content', firstTime, this._oldModel, this._model)\n\n    /** @type {?} */\n    const self = this; // Set initial content\n\n    if (this._model || this._model === '') {\n      this._oldModel = this._model;\n\n      if (this._hasSpecialTag) {\n        /** @type {?} */\n        const tags = this._model; // add tags on element\n\n        if (tags) {\n          for (const attr in tags) {\n            if (tags.hasOwnProperty(attr) && attr !== this.INNER_HTML_ATTR) {\n              this._$element.attr(attr, tags[attr]);\n            }\n          }\n\n          if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n            this._$element[0].innerHTML = tags[this.INNER_HTML_ATTR];\n          }\n        }\n      } else {\n        self.setHtml();\n      }\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  destroyEditor() {\n    if (this._editorInitialized) {\n      this._editor.off('keyup');\n\n      this._$element.summernote('destroy'); // TODO not sure it works now...\n\n\n      this._editorInitialized = false;\n    }\n  } // private getEditor() {\n  //   if (this._$element) {\n  //     return this._$element.summernote.bind(this._$element);\n  //   }\n  //   return null;\n  // }\n\n  /**\n   * @private\n   * @param {?} files\n   * @return {?}\n   */\n\n\n  uploadImage(files) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._options.uploadImagePath) {\n        this.imageUpload.emit({\n          uploading: true\n        });\n        /** @type {?} */\n\n        const requests = [];\n\n        for (const file of files) {\n          /** @type {?} */\n          const data = new FormData();\n          data.append('image', file);\n          /** @type {?} */\n\n          const obs = this.http.post(this._options.uploadImagePath, data, this._options.uploadImageRequestOptions).pipe(map(\n          /**\n          * @param {?} response\n          * @return {?}\n          */\n          response => response && typeof response.path === 'string' && response.path));\n          requests.push(obs);\n        }\n\n        this.uploadSub = combineLatest(requests).subscribe(\n        /**\n        * @param {?} remotePaths\n        * @return {?}\n        */\n        remotePaths => {\n          for (const remotePath of remotePaths) {\n            this._$element.summernote('insertImage', remotePath);\n          }\n\n          this.imageUpload.emit({\n            uploading: false\n          });\n        },\n        /**\n        * @param {?} err\n        * @return {?}\n        */\n        err => this.insertFromDataURL(files));\n      } else {\n        this.insertFromDataURL(files);\n      }\n    });\n  }\n  /**\n   * @param {?} files\n   * @return {?}\n   */\n\n\n  insertFromDataURL(files) {\n    for (const file of files) {\n      /** @type {?} */\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload =\n      /**\n      * @return {?}\n      */\n      () => {\n        this._$element.summernote('insertImage', reader.result);\n\n        this.imageUpload.emit({\n          uploading: false,\n          encoding: 'base64'\n        });\n      };\n\n      reader.onerror =\n      /**\n      * @param {?} error\n      * @return {?}\n      */\n      error => console.error(error);\n    }\n  }\n\n}\n\nNgxSummernoteDirective.ɵfac = function NgxSummernoteDirective_Factory(t) {\n  return new (t || NgxSummernoteDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient));\n};\n\nNgxSummernoteDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: NgxSummernoteDirective,\n  selectors: [[\"\", \"ngxSummernote\", \"\"]],\n  inputs: {\n    ngxSummernote: \"ngxSummernote\",\n    summernoteModel: \"summernoteModel\",\n    ngxSummernoteDisabled: \"ngxSummernoteDisabled\"\n  },\n  outputs: {\n    summernoteModelChange: \"summernoteModelChange\",\n    imageUpload: \"imageUpload\",\n    mediaDelete: \"mediaDelete\",\n    blur: \"blur\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(\n    /**\n    * @return {?}\n    */\n    () => NgxSummernoteDirective),\n    multi: true\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nNgxSummernoteDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: HttpClient\n}];\n\nNgxSummernoteDirective.propDecorators = {\n  ngxSummernote: [{\n    type: Input\n  }],\n  summernoteModel: [{\n    type: Input\n  }],\n  summernoteModelChange: [{\n    type: Output\n  }],\n  imageUpload: [{\n    type: Output\n  }],\n  mediaDelete: [{\n    type: Output\n  }],\n  blur: [{\n    type: Output\n  }],\n  ngxSummernoteDisabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSummernoteDirective, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: '[ngxSummernote]',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(\n        /**\n        * @return {?}\n        */\n        () => NgxSummernoteDirective),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc1.HttpClient\n    }];\n  }, {\n    summernoteModelChange: [{\n      type: Output\n    }],\n    imageUpload: [{\n      type: Output\n    }],\n    mediaDelete: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    ngxSummernote: [{\n      type: Input\n    }],\n    summernoteModel: [{\n      type: Input\n    }],\n    ngxSummernoteDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NgxSummernoteDirective.prototype.summernoteModelChange;\n  /** @type {?} */\n\n  NgxSummernoteDirective.prototype.imageUpload;\n  /** @type {?} */\n\n  NgxSummernoteDirective.prototype.mediaDelete;\n  /** @type {?} */\n\n  NgxSummernoteDirective.prototype.blur;\n  /** @type {?} */\n\n  NgxSummernoteDirective.prototype.ngxSummernoteDisabled;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype._options;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype.SPECIAL_TAGS;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype.INNER_HTML_ATTR;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype._hasSpecialTag;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype._$element;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype._editor;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype._model;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype._oldModel;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype._editorInitialized;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype.uploadSub;\n  /** @type {?} */\n\n  NgxSummernoteDirective.prototype.onChange;\n  /** @type {?} */\n\n  NgxSummernoteDirective.prototype.onTouched;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype.el;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype.zone;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteDirective.prototype.http;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-summernote-view.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass NgxSummernoteViewDirective {\n  /**\n   * @param {?} renderer2\n   * @param {?} element\n   */\n  constructor(renderer2, element) {\n    this.renderer2 = renderer2;\n    this._element = element.nativeElement;\n  }\n  /**\n   * @param {?} content\n   * @return {?}\n   */\n\n\n  set ngxSummernoteView(content) {\n    this._element.innerHTML = content || '';\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterViewInit() {\n    this.renderer2.addClass(this._element, 'ngx-summernote-view');\n  }\n\n}\n\nNgxSummernoteViewDirective.ɵfac = function NgxSummernoteViewDirective_Factory(t) {\n  return new (t || NgxSummernoteViewDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgxSummernoteViewDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: NgxSummernoteViewDirective,\n  selectors: [[\"\", \"ngxSummernoteView\", \"\"]],\n  inputs: {\n    ngxSummernoteView: \"ngxSummernoteView\"\n  }\n});\n/** @nocollapse */\n\nNgxSummernoteViewDirective.ctorParameters = () => [{\n  type: Renderer2\n}, {\n  type: ElementRef\n}];\n\nNgxSummernoteViewDirective.propDecorators = {\n  ngxSummernoteView: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSummernoteViewDirective, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: '[ngxSummernoteView]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    ngxSummernoteView: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  NgxSummernoteViewDirective.prototype._element;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxSummernoteViewDirective.prototype.renderer2;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-summernote.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass NgxSummernoteModule {\n  /**\n   * @return {?}\n   */\n  static forRoot() {\n    return {\n      ngModule: NgxSummernoteModule,\n      providers: []\n    };\n  }\n\n}\n\nNgxSummernoteModule.ɵfac = function NgxSummernoteModule_Factory(t) {\n  return new (t || NgxSummernoteModule)();\n};\n\nNgxSummernoteModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgxSummernoteModule\n});\nNgxSummernoteModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSummernoteModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxSummernoteDirective, NgxSummernoteViewDirective],\n      exports: [NgxSummernoteDirective, NgxSummernoteViewDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxSummernoteModule, {\n    declarations: [NgxSummernoteDirective, NgxSummernoteViewDirective],\n    exports: [NgxSummernoteDirective, NgxSummernoteViewDirective]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-summernote.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NgxSummernoteDirective, NgxSummernoteModule, NgxSummernoteViewDirective, codeBlockButton };","map":{"version":3,"names":["__awaiter","HttpClient","EventEmitter","Directive","forwardRef","ElementRef","NgZone","Input","Output","Renderer2","NgModule","NG_VALUE_ACCESSOR","combineLatest","map","ɵngcc0","ɵngcc1","codeBlockButtonStyle","codeBlockButton","context","ui","$","summernote","button","contents","tooltip","container","className","click","selectedText","window","getSelection","toString","replace","codeText","codeBlock","invoke","render","NgxSummernoteDirective","constructor","el","zone","http","summernoteModelChange","imageUpload","mediaDelete","blur","_options","SPECIAL_TAGS","INNER_HTML_ATTR","_oldModel","onChange","_","onTouched","element","nativeElement","indexOf","tagName","toLowerCase","_hasSpecialTag","ngxSummernote","options","buttons","callbacks","Object","assign","onImageUpload","files","uploadImage","onMediaDelete","emit","url","attr","summernoteModel","content","updateEditor","ngOnInit","createEditor","ngOnChanges","changes","_editorInitialized","ngxSummernoteDisabled","firstChange","currentValue","previousValue","_$element","ngOnDestroy","destroyEditor","uploadSub","unsubscribe","writeValue","registerOnChange","fn","registerOnTouched","JSON","stringify","html","updateModel","run","modelContent","attributeNodes","attributes","attrs","i","length","attrName","name","angularIgnoreAttrs","value","innerHTML","returnedHtml","initListeners","self","on","setTimeout","event","$editable","immediateAngularModelUpdate","_editor","setContent","wait","error","console","log","runOutsideAngular","data","$note","setHtml","_model","firstTime","tags","hasOwnProperty","off","uploadImagePath","uploading","requests","file","FormData","append","obs","post","uploadImageRequestOptions","pipe","response","path","push","subscribe","remotePaths","remotePath","err","insertFromDataURL","reader","FileReader","readAsDataURL","onload","result","encoding","onerror","ɵfac","NgxSummernoteDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","inputs","outputs","features","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵNgOnChangesFeature","ctorParameters","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","providers","prototype","NgxSummernoteViewDirective","renderer2","_element","ngxSummernoteView","ngAfterViewInit","addClass","NgxSummernoteViewDirective_Factory","NgxSummernoteModule","forRoot","ngModule","NgxSummernoteModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/home/code237/Documents/GitHub/Projet1_Wds/node_modules/ngx-summernote/__ivy_ngcc__/fesm2015/ngx-summernote.js"],"sourcesContent":["import { __awaiter } from 'tslib';\nimport { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Directive, forwardRef, ElementRef, NgZone, Input, Output, Renderer2, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/code-block.button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nconst codeBlockButtonStyle = `font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\nfont-size: 12px;\npadding: 14px 12px;\nmargin-bottom: 12px;\nline-height: 1.42857;\nword-break: break-all;\noverflow-wrap: break-word;\nbackground-color: rgb(250, 251, 253);\nborder: 1px solid rgb(234, 236, 240);\nborder-radius: 4px; color: #60a0b0;\nwhite-space: pre-wrap;`;\n/** @type {?} */\nconst codeBlockButton = (/**\n * @param {?} context\n * @return {?}\n */\nfunction (context) {\n    /** @type {?} */\n    const ui = $.summernote.ui;\n    // create button\n    /** @type {?} */\n    const button = ui.button({\n        contents: '<i class=\"note-icon-frame\" style=\"margin-right: 4px\"></i> Code block',\n        tooltip: 'Add code block',\n        container: '.note-editor',\n        className: 'note-btn',\n        click: (/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            let selectedText = null;\n            // The below code will copy the selected block and add it into our code block\n            if (window.getSelection) {\n                selectedText = window\n                    .getSelection()\n                    .toString()\n                    .replace(/^\\s+|\\s+$/g, '');\n            }\n            /** @type {?} */\n            const codeText = selectedText ? selectedText : `Place your code here.`;\n            /** @type {?} */\n            const codeBlock = `<pre class=\"code-block\" style=\"${codeBlockButtonStyle}\">${codeText}</pre>`;\n            context.invoke('editor.pasteHTML', codeBlock);\n        })\n    });\n    return button.render(); // return button as jquery object\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-summernote.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxSummernoteDirective {\n    /**\n     * @param {?} el\n     * @param {?} zone\n     * @param {?} http\n     */\n    constructor(el, zone, http) {\n        this.el = el;\n        this.zone = zone;\n        this.http = http;\n        // summernoteModel directive as output: update model if editor contentChanged\n        this.summernoteModelChange = new EventEmitter();\n        this.imageUpload = new EventEmitter();\n        this.mediaDelete = new EventEmitter();\n        // // summernoteInit directive as output: send manual editor initialization\n        // @Output() summernoteInit: EventEmitter<Object> = new EventEmitter<Object>();\n        this.blur = new EventEmitter();\n        this._options = {};\n        this.SPECIAL_TAGS = ['img', 'button', 'input', 'a'];\n        this.INNER_HTML_ATTR = 'innerHTML';\n        this._oldModel = null;\n        // Begin ControlValueAccesor methods.\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /** @type {?} */\n        const element = el.nativeElement;\n        // check if the element is a special tag\n        if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) !== -1) {\n            this._hasSpecialTag = true;\n        }\n        // jquery wrap and store element\n        // this._$element = <any>$(element);\n        this.zone = zone;\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    set ngxSummernote(options) {\n        if (options) {\n            if (!options.buttons) {\n                options.buttons = {};\n            }\n            options.callbacks = Object.assign({}, options.callbacks, { onImageUpload: (/**\n                 * @param {?} files\n                 * @return {?}\n                 */\n                files => this.uploadImage(files)), onMediaDelete: (/**\n                 * @param {?} files\n                 * @return {?}\n                 */\n                files => this.mediaDelete.emit({ url: $(files[0]).attr('src') })) });\n            // add custom buttons\n            options.buttons.codeBlock = codeBlockButton;\n            Object.assign(this._options, options);\n        }\n    }\n    // summernoteModel directive as input: store initial editor content\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    set summernoteModel(content) {\n        this.updateEditor(content);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.createEditor();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._editorInitialized && changes) {\n            if (changes.ngxSummernoteDisabled &&\n                !changes.ngxSummernoteDisabled.firstChange &&\n                changes.ngxSummernoteDisabled.currentValue !==\n                    changes.ngxSummernoteDisabled.previousValue) {\n                if (changes.ngxSummernoteDisabled.currentValue) {\n                    this._$element.summernote('disable');\n                }\n                else {\n                    this._$element.summernote('enable');\n                }\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyEditor();\n        if (this.uploadSub) {\n            this.uploadSub.unsubscribe();\n        }\n    }\n    // Form model content changed.\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    writeValue(content) {\n        this.updateEditor(content);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    // Update editor with model contents.\n    /**\n     * @private\n     * @param {?} content\n     * @return {?}\n     */\n    updateEditor(content) {\n        if (JSON.stringify(this._oldModel) === JSON.stringify(content)) {\n            return;\n        }\n        this._oldModel = content;\n        // this._$element.html(content);\n        if (this._editorInitialized) {\n            this._$element.summernote('code', content);\n        }\n        else {\n            this._$element.html(content);\n        }\n    }\n    // update model if editor contentChanged\n    /**\n     * @private\n     * @param {?=} content\n     * @return {?}\n     */\n    updateModel(content) {\n        // console.log('update model', content)\n        this.zone.run((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let modelContent = null;\n            if (this._hasSpecialTag) {\n                /** @type {?} */\n                const attributeNodes = this._$element[0].attributes;\n                /** @type {?} */\n                const attrs = {};\n                for (let i = 0; i < attributeNodes.length; i++) {\n                    /** @type {?} */\n                    const attrName = attributeNodes[i].name;\n                    if (this._options.angularIgnoreAttrs &&\n                        this._options.angularIgnoreAttrs.indexOf(attrName) !== -1) {\n                        continue;\n                    }\n                    attrs[attrName] = attributeNodes[i].value;\n                }\n                if (this._$element[0].innerHTML) {\n                    attrs[this.INNER_HTML_ATTR] = this._$element[0].innerHTML;\n                }\n                modelContent = attrs;\n            }\n            else {\n                /** @type {?} */\n                const returnedHtml = content || '';\n                if (typeof returnedHtml === 'string') {\n                    modelContent = returnedHtml;\n                }\n            }\n            if (this._oldModel !== modelContent) {\n                this._oldModel = modelContent;\n                // Update summernoteModel\n                this.summernoteModelChange.emit(modelContent);\n                // Update form model.\n                this.onChange(content);\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    initListeners() {\n        /** @type {?} */\n        const self = this;\n        if (!this._$element) {\n            return;\n        }\n        this._$element.on('summernote.init', (/**\n         * @return {?}\n         */\n        function () {\n            setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                self.updateModel();\n            }), 0);\n        }));\n        this._$element.on('summernote.change', (/**\n         * @param {?} event\n         * @param {?} contents\n         * @param {?} $editable\n         * @return {?}\n         */\n        function (event, contents, $editable) {\n            setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                self.updateModel(contents);\n            }), 0);\n        }));\n        this._$element.on('summernote.blur', (/**\n         * @return {?}\n         */\n        function () {\n            setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                self.onTouched();\n                self.blur.emit();\n            }), 0);\n        }));\n        if (this._options.immediateAngularModelUpdate) {\n            this._editor.on('keyup', (/**\n             * @return {?}\n             */\n            function () {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                function () {\n                    self.updateModel();\n                }), 0);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    createEditor() {\n        if (this._editorInitialized) {\n            return;\n        }\n        this.setContent(true);\n        /** @type {?} */\n        const wait = 50;\n        // this.initListeners(); // issue #31\n        try {\n            this._$element = (/** @type {?} */ ($(this.el.nativeElement)));\n        }\n        catch (error) {\n            console.log(`JQuery seems not te loaded yet! Wait ${wait}ms and try again`);\n        }\n        if (!this._$element) {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.createEditor();\n            }), wait);\n        }\n        else {\n            // init editor\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this._editor = this._$element\n                    .summernote(this._options)\n                    .data('summernote').$note;\n                this.initListeners(); // issue #31\n                if (this.ngxSummernoteDisabled) {\n                    this._$element.summernote('disable');\n                }\n            }));\n            this._editorInitialized = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setHtml() {\n        this._$element.summernote('code', this._model || '', true);\n    }\n    /**\n     * @private\n     * @param {?=} firstTime\n     * @return {?}\n     */\n    setContent(firstTime = false) {\n        // console.log('set content', firstTime, this._oldModel, this._model)\n        /** @type {?} */\n        const self = this;\n        // Set initial content\n        if (this._model || this._model === '') {\n            this._oldModel = this._model;\n            if (this._hasSpecialTag) {\n                /** @type {?} */\n                const tags = this._model;\n                // add tags on element\n                if (tags) {\n                    for (const attr in tags) {\n                        if (tags.hasOwnProperty(attr) && attr !== this.INNER_HTML_ATTR) {\n                            this._$element.attr(attr, tags[attr]);\n                        }\n                    }\n                    if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n                        this._$element[0].innerHTML = tags[this.INNER_HTML_ATTR];\n                    }\n                }\n            }\n            else {\n                self.setHtml();\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    destroyEditor() {\n        if (this._editorInitialized) {\n            this._editor.off('keyup');\n            this._$element.summernote('destroy'); // TODO not sure it works now...\n            this._editorInitialized = false;\n        }\n    }\n    // private getEditor() {\n    //   if (this._$element) {\n    //     return this._$element.summernote.bind(this._$element);\n    //   }\n    //   return null;\n    // }\n    /**\n     * @private\n     * @param {?} files\n     * @return {?}\n     */\n    uploadImage(files) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._options.uploadImagePath) {\n                this.imageUpload.emit({ uploading: true });\n                /** @type {?} */\n                const requests = [];\n                for (const file of files) {\n                    /** @type {?} */\n                    const data = new FormData();\n                    data.append('image', file);\n                    /** @type {?} */\n                    const obs = this.http\n                        .post(this._options.uploadImagePath, data, this._options.uploadImageRequestOptions)\n                        .pipe(map((/**\n                     * @param {?} response\n                     * @return {?}\n                     */\n                    (response) => response && typeof response.path === 'string' && response.path)));\n                    requests.push(obs);\n                }\n                this.uploadSub = combineLatest(requests).subscribe((/**\n                 * @param {?} remotePaths\n                 * @return {?}\n                 */\n                (remotePaths) => {\n                    for (const remotePath of remotePaths) {\n                        this._$element.summernote('insertImage', remotePath);\n                    }\n                    this.imageUpload.emit({ uploading: false });\n                }), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                err => this.insertFromDataURL(files)));\n            }\n            else {\n                this.insertFromDataURL(files);\n            }\n        });\n    }\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    insertFromDataURL(files) {\n        for (const file of files) {\n            /** @type {?} */\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = (/**\n             * @return {?}\n             */\n            () => {\n                this._$element.summernote('insertImage', reader.result);\n                this.imageUpload.emit({ uploading: false, encoding: 'base64' });\n            });\n            reader.onerror = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            error => console.error(error));\n        }\n    }\n}\nNgxSummernoteDirective.ɵfac = function NgxSummernoteDirective_Factory(t) { return new (t || NgxSummernoteDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient)); };\nNgxSummernoteDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgxSummernoteDirective, selectors: [[\"\", \"ngxSummernote\", \"\"]], inputs: { ngxSummernote: \"ngxSummernote\", summernoteModel: \"summernoteModel\", ngxSummernoteDisabled: \"ngxSummernoteDisabled\" }, outputs: { summernoteModelChange: \"summernoteModelChange\", imageUpload: \"imageUpload\", mediaDelete: \"mediaDelete\", blur: \"blur\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(( /**\n                 * @return {?}\n                 */() => NgxSummernoteDirective)),\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nNgxSummernoteDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: HttpClient }\n];\nNgxSummernoteDirective.propDecorators = {\n    ngxSummernote: [{ type: Input }],\n    summernoteModel: [{ type: Input }],\n    summernoteModelChange: [{ type: Output }],\n    imageUpload: [{ type: Output }],\n    mediaDelete: [{ type: Output }],\n    blur: [{ type: Output }],\n    ngxSummernoteDisabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSummernoteDirective, [{\n        type: Directive,\n        args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[ngxSummernote]',\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(( /**\n                         * @return {?}\n                         */() => NgxSummernoteDirective)),\n                        multi: true\n                    }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.HttpClient }]; }, { summernoteModelChange: [{\n            type: Output\n        }], imageUpload: [{\n            type: Output\n        }], mediaDelete: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], ngxSummernote: [{\n            type: Input\n        }], summernoteModel: [{\n            type: Input\n        }], ngxSummernoteDisabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    NgxSummernoteDirective.prototype.summernoteModelChange;\n    /** @type {?} */\n    NgxSummernoteDirective.prototype.imageUpload;\n    /** @type {?} */\n    NgxSummernoteDirective.prototype.mediaDelete;\n    /** @type {?} */\n    NgxSummernoteDirective.prototype.blur;\n    /** @type {?} */\n    NgxSummernoteDirective.prototype.ngxSummernoteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype._options;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype.SPECIAL_TAGS;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype.INNER_HTML_ATTR;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype._hasSpecialTag;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype._$element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype._editor;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype._model;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype._oldModel;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype._editorInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype.uploadSub;\n    /** @type {?} */\n    NgxSummernoteDirective.prototype.onChange;\n    /** @type {?} */\n    NgxSummernoteDirective.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype.zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteDirective.prototype.http;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-summernote-view.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxSummernoteViewDirective {\n    /**\n     * @param {?} renderer2\n     * @param {?} element\n     */\n    constructor(renderer2, element) {\n        this.renderer2 = renderer2;\n        this._element = element.nativeElement;\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    set ngxSummernoteView(content) {\n        this._element.innerHTML = content || '';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.renderer2.addClass(this._element, 'ngx-summernote-view');\n    }\n}\nNgxSummernoteViewDirective.ɵfac = function NgxSummernoteViewDirective_Factory(t) { return new (t || NgxSummernoteViewDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgxSummernoteViewDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgxSummernoteViewDirective, selectors: [[\"\", \"ngxSummernoteView\", \"\"]], inputs: { ngxSummernoteView: \"ngxSummernoteView\" } });\n/** @nocollapse */\nNgxSummernoteViewDirective.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nNgxSummernoteViewDirective.propDecorators = {\n    ngxSummernoteView: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSummernoteViewDirective, [{\n        type: Directive,\n        args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[ngxSummernoteView]'\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { ngxSummernoteView: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteViewDirective.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxSummernoteViewDirective.prototype.renderer2;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-summernote.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxSummernoteModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: NgxSummernoteModule, providers: [] };\n    }\n}\nNgxSummernoteModule.ɵfac = function NgxSummernoteModule_Factory(t) { return new (t || NgxSummernoteModule)(); };\nNgxSummernoteModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxSummernoteModule });\nNgxSummernoteModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSummernoteModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgxSummernoteDirective,\n                    NgxSummernoteViewDirective\n                ],\n                exports: [\n                    NgxSummernoteDirective,\n                    NgxSummernoteViewDirective\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxSummernoteModule, { declarations: [NgxSummernoteDirective, NgxSummernoteViewDirective], exports: [NgxSummernoteDirective, NgxSummernoteViewDirective] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-summernote.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxSummernoteDirective, NgxSummernoteModule, NgxSummernoteViewDirective, codeBlockButton };\n\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,UAAlC,EAA8CC,UAA9C,EAA0DC,MAA1D,EAAkEC,KAAlE,EAAyEC,MAAzE,EAAiFC,SAAjF,EAA4FC,QAA5F,QAA4G,eAA5G;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,aAAT,QAA8B,MAA9B;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA;AACA;AACA;AACA;AACA;;AACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AACA,MAAMC,oBAAoB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAVA;AAWA;;AACA,MAAMC,eAAe;AAAI;AACzB;AACA;AACA;AACA,UAAUC,OAAV,EAAmB;EACf;EACA,MAAMC,EAAE,GAAGC,CAAC,CAACC,UAAF,CAAaF,EAAxB,CAFe,CAGf;;EACA;;EACA,MAAMG,MAAM,GAAGH,EAAE,CAACG,MAAH,CAAU;IACrBC,QAAQ,EAAE,sEADW;IAErBC,OAAO,EAAE,gBAFY;IAGrBC,SAAS,EAAE,cAHU;IAIrBC,SAAS,EAAE,UAJU;IAKrBC,KAAK;IAAG;AAChB;AACA;IACQ,YAAY;MACR;MACA,IAAIC,YAAY,GAAG,IAAnB,CAFQ,CAGR;;MACA,IAAIC,MAAM,CAACC,YAAX,EAAyB;QACrBF,YAAY,GAAGC,MAAM,CAChBC,YADU,GAEVC,QAFU,GAGVC,OAHU,CAGF,YAHE,EAGY,EAHZ,CAAf;MAIH;MACD;;;MACA,MAAMC,QAAQ,GAAGL,YAAY,GAAGA,YAAH,GAAmB,uBAAhD;MACA;;MACA,MAAMM,SAAS,GAAI,kCAAiClB,oBAAqB,KAAIiB,QAAS,QAAtF;MACAf,OAAO,CAACiB,MAAR,CAAe,kBAAf,EAAmCD,SAAnC;IACH;EAvBoB,CAAV,CAAf;EAyBA,OAAOZ,MAAM,CAACc,MAAP,EAAP,CA9Be,CA8BS;AAC3B,CAnCD;AAqCA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,sBAAN,CAA6B;EACzB;AACJ;AACA;AACA;AACA;EACIC,WAAW,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAiB;IACxB,KAAKF,EAAL,GAAUA,EAAV;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ,CAHwB,CAIxB;;IACA,KAAKC,qBAAL,GAA6B,IAAIxC,YAAJ,EAA7B;IACA,KAAKyC,WAAL,GAAmB,IAAIzC,YAAJ,EAAnB;IACA,KAAK0C,WAAL,GAAmB,IAAI1C,YAAJ,EAAnB,CAPwB,CAQxB;IACA;;IACA,KAAK2C,IAAL,GAAY,IAAI3C,YAAJ,EAAZ;IACA,KAAK4C,QAAL,GAAgB,EAAhB;IACA,KAAKC,YAAL,GAAoB,CAAC,KAAD,EAAQ,QAAR,EAAkB,OAAlB,EAA2B,GAA3B,CAApB;IACA,KAAKC,eAAL,GAAuB,WAAvB;IACA,KAAKC,SAAL,GAAiB,IAAjB,CAdwB,CAexB;;IACA,KAAKC,QAAL;IAAiB;AACzB;AACA;AACA;IACSC,CAAD,IAAO,CAAG,CAJV;;IAKA,KAAKC,SAAL;IAAkB;AAC1B;AACA;IACQ,MAAM,CAAG,CAHT;IAIA;;;IACA,MAAMC,OAAO,GAAGd,EAAE,CAACe,aAAnB,CA1BwB,CA2BxB;;IACA,IAAI,KAAKP,YAAL,CAAkBQ,OAAlB,CAA0BF,OAAO,CAACG,OAAR,CAAgBC,WAAhB,EAA1B,MAA6D,CAAC,CAAlE,EAAqE;MACjE,KAAKC,cAAL,GAAsB,IAAtB;IACH,CA9BuB,CA+BxB;IACA;;;IACA,KAAKlB,IAAL,GAAYA,IAAZ;EACH;EACD;AACJ;AACA;AACA;;;EACqB,IAAbmB,aAAa,CAACC,OAAD,EAAU;IACvB,IAAIA,OAAJ,EAAa;MACT,IAAI,CAACA,OAAO,CAACC,OAAb,EAAsB;QAClBD,OAAO,CAACC,OAAR,GAAkB,EAAlB;MACH;;MACDD,OAAO,CAACE,SAAR,GAAoBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,OAAO,CAACE,SAA1B,EAAqC;QAAEG,aAAa;QAAG;AACvF;AACA;AACA;QACgBC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAJ4C;QAIlBE,aAAa;QAAG;AACnE;AACA;AACA;QACgBF,KAAK,IAAI,KAAKtB,WAAL,CAAiByB,IAAjB,CAAsB;UAAEC,GAAG,EAAElD,CAAC,CAAC8C,KAAK,CAAC,CAAD,CAAN,CAAD,CAAYK,IAAZ,CAAiB,KAAjB;QAAP,CAAtB;MAR4C,CAArC,CAApB,CAJS,CAaT;;MACAX,OAAO,CAACC,OAAR,CAAgB3B,SAAhB,GAA4BjB,eAA5B;MACA8C,MAAM,CAACC,MAAP,CAAc,KAAKlB,QAAnB,EAA6Bc,OAA7B;IACH;EACJ,CA/DwB,CAgEzB;;EACA;AACJ;AACA;AACA;;;EACuB,IAAfY,eAAe,CAACC,OAAD,EAAU;IACzB,KAAKC,YAAL,CAAkBD,OAAlB;EACH;EACD;AACJ;AACA;;;EACIE,QAAQ,GAAG;IACP,KAAKC,YAAL;EACH;EACD;AACJ;AACA;AACA;;;EACIC,WAAW,CAACC,OAAD,EAAU;IACjB,IAAI,KAAKC,kBAAL,IAA2BD,OAA/B,EAAwC;MACpC,IAAIA,OAAO,CAACE,qBAAR,IACA,CAACF,OAAO,CAACE,qBAAR,CAA8BC,WAD/B,IAEAH,OAAO,CAACE,qBAAR,CAA8BE,YAA9B,KACIJ,OAAO,CAACE,qBAAR,CAA8BG,aAHtC,EAGqD;QACjD,IAAIL,OAAO,CAACE,qBAAR,CAA8BE,YAAlC,EAAgD;UAC5C,KAAKE,SAAL,CAAe/D,UAAf,CAA0B,SAA1B;QACH,CAFD,MAGK;UACD,KAAK+D,SAAL,CAAe/D,UAAf,CAA0B,QAA1B;QACH;MACJ;IACJ;EACJ;EACD;AACJ;AACA;;;EACIgE,WAAW,GAAG;IACV,KAAKC,aAAL;;IACA,IAAI,KAAKC,SAAT,EAAoB;MAChB,KAAKA,SAAL,CAAeC,WAAf;IACH;EACJ,CAzGwB,CA0GzB;;EACA;AACJ;AACA;AACA;;;EACIC,UAAU,CAAChB,OAAD,EAAU;IAChB,KAAKC,YAAL,CAAkBD,OAAlB;EACH;EACD;AACJ;AACA;AACA;;;EACIiB,gBAAgB,CAACC,EAAD,EAAK;IACjB,KAAKzC,QAAL,GAAgByC,EAAhB;EACH;EACD;AACJ;AACA;AACA;;;EACIC,iBAAiB,CAACD,EAAD,EAAK;IAClB,KAAKvC,SAAL,GAAiBuC,EAAjB;EACH,CA/HwB,CAgIzB;;EACA;AACJ;AACA;AACA;AACA;;;EACIjB,YAAY,CAACD,OAAD,EAAU;IAClB,IAAIoB,IAAI,CAACC,SAAL,CAAe,KAAK7C,SAApB,MAAmC4C,IAAI,CAACC,SAAL,CAAerB,OAAf,CAAvC,EAAgE;MAC5D;IACH;;IACD,KAAKxB,SAAL,GAAiBwB,OAAjB,CAJkB,CAKlB;;IACA,IAAI,KAAKM,kBAAT,EAA6B;MACzB,KAAKK,SAAL,CAAe/D,UAAf,CAA0B,MAA1B,EAAkCoD,OAAlC;IACH,CAFD,MAGK;MACD,KAAKW,SAAL,CAAeW,IAAf,CAAoBtB,OAApB;IACH;EACJ,CAlJwB,CAmJzB;;EACA;AACJ;AACA;AACA;AACA;;;EACIuB,WAAW,CAACvB,OAAD,EAAU;IACjB;IACA,KAAKjC,IAAL,CAAUyD,GAAV;IAAe;AACvB;AACA;IACQ,MAAM;MACF;MACA,IAAIC,YAAY,GAAG,IAAnB;;MACA,IAAI,KAAKxC,cAAT,EAAyB;QACrB;QACA,MAAMyC,cAAc,GAAG,KAAKf,SAAL,CAAe,CAAf,EAAkBgB,UAAzC;QACA;;QACA,MAAMC,KAAK,GAAG,EAAd;;QACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,cAAc,CAACI,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;UAC5C;UACA,MAAME,QAAQ,GAAGL,cAAc,CAACG,CAAD,CAAd,CAAkBG,IAAnC;;UACA,IAAI,KAAK3D,QAAL,CAAc4D,kBAAd,IACA,KAAK5D,QAAL,CAAc4D,kBAAd,CAAiCnD,OAAjC,CAAyCiD,QAAzC,MAAuD,CAAC,CAD5D,EAC+D;YAC3D;UACH;;UACDH,KAAK,CAACG,QAAD,CAAL,GAAkBL,cAAc,CAACG,CAAD,CAAd,CAAkBK,KAApC;QACH;;QACD,IAAI,KAAKvB,SAAL,CAAe,CAAf,EAAkBwB,SAAtB,EAAiC;UAC7BP,KAAK,CAAC,KAAKrD,eAAN,CAAL,GAA8B,KAAKoC,SAAL,CAAe,CAAf,EAAkBwB,SAAhD;QACH;;QACDV,YAAY,GAAGG,KAAf;MACH,CAlBD,MAmBK;QACD;QACA,MAAMQ,YAAY,GAAGpC,OAAO,IAAI,EAAhC;;QACA,IAAI,OAAOoC,YAAP,KAAwB,QAA5B,EAAsC;UAClCX,YAAY,GAAGW,YAAf;QACH;MACJ;;MACD,IAAI,KAAK5D,SAAL,KAAmBiD,YAAvB,EAAqC;QACjC,KAAKjD,SAAL,GAAiBiD,YAAjB,CADiC,CAEjC;;QACA,KAAKxD,qBAAL,CAA2B2B,IAA3B,CAAgC6B,YAAhC,EAHiC,CAIjC;;QACA,KAAKhD,QAAL,CAAcuB,OAAd;MACH;IACJ,CAvCD;EAwCH;EACD;AACJ;AACA;AACA;;;EACIqC,aAAa,GAAG;IACZ;IACA,MAAMC,IAAI,GAAG,IAAb;;IACA,IAAI,CAAC,KAAK3B,SAAV,EAAqB;MACjB;IACH;;IACD,KAAKA,SAAL,CAAe4B,EAAf,CAAkB,iBAAlB;IAAsC;AAC9C;AACA;IACQ,YAAY;MACRC,UAAU;MAAE;AACxB;AACA;MACY,YAAY;QACRF,IAAI,CAACf,WAAL;MACH,CALS,EAKN,CALM,CAAV;IAMH,CAVD;;IAWA,KAAKZ,SAAL,CAAe4B,EAAf,CAAkB,mBAAlB;IAAwC;AAChD;AACA;AACA;AACA;AACA;IACQ,UAAUE,KAAV,EAAiB3F,QAAjB,EAA2B4F,SAA3B,EAAsC;MAClCF,UAAU;MAAE;AACxB;AACA;MACY,YAAY;QACRF,IAAI,CAACf,WAAL,CAAiBzE,QAAjB;MACH,CALS,EAKN,CALM,CAAV;IAMH,CAbD;;IAcA,KAAK6D,SAAL,CAAe4B,EAAf,CAAkB,iBAAlB;IAAsC;AAC9C;AACA;IACQ,YAAY;MACRC,UAAU;MAAE;AACxB;AACA;MACY,YAAY;QACRF,IAAI,CAAC3D,SAAL;QACA2D,IAAI,CAAClE,IAAL,CAAUwB,IAAV;MACH,CANS,EAMN,CANM,CAAV;IAOH,CAXD;;IAYA,IAAI,KAAKvB,QAAL,CAAcsE,2BAAlB,EAA+C;MAC3C,KAAKC,OAAL,CAAaL,EAAb,CAAgB,OAAhB;MAA0B;AACtC;AACA;MACY,YAAY;QACRC,UAAU;QAAE;AAC5B;AACA;QACgB,YAAY;UACRF,IAAI,CAACf,WAAL;QACH,CALS,EAKN,CALM,CAAV;MAMH,CAVD;IAWH;EACJ;EACD;AACJ;AACA;AACA;;;EACIpB,YAAY,GAAG;IACX,IAAI,KAAKG,kBAAT,EAA6B;MACzB;IACH;;IACD,KAAKuC,UAAL,CAAgB,IAAhB;IACA;;IACA,MAAMC,IAAI,GAAG,EAAb,CANW,CAOX;;IACA,IAAI;MACA,KAAKnC,SAAL;MAAkB;MAAkBhE,CAAC,CAAC,KAAKmB,EAAL,CAAQe,aAAT,CAArC;IACH,CAFD,CAGA,OAAOkE,KAAP,EAAc;MACVC,OAAO,CAACC,GAAR,CAAa,wCAAuCH,IAAK,kBAAzD;IACH;;IACD,IAAI,CAAC,KAAKnC,SAAV,EAAqB;MACjB6B,UAAU;MAAE;AACxB;AACA;MACY,MAAM;QACF,KAAKrC,YAAL;MACH,CALS,EAKN2C,IALM,CAAV;IAMH,CAPD,MAQK;MACD;MACA,KAAK/E,IAAL,CAAUmF,iBAAV;MAA6B;AACzC;AACA;MACY,MAAM;QACF,KAAKN,OAAL,GAAe,KAAKjC,SAAL,CACV/D,UADU,CACC,KAAKyB,QADN,EAEV8E,IAFU,CAEL,YAFK,EAESC,KAFxB;QAGA,KAAKf,aAAL,GAJE,CAIoB;;QACtB,IAAI,KAAK9B,qBAAT,EAAgC;UAC5B,KAAKI,SAAL,CAAe/D,UAAf,CAA0B,SAA1B;QACH;MACJ,CAXD;MAYA,KAAK0D,kBAAL,GAA0B,IAA1B;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACI+C,OAAO,GAAG;IACN,KAAK1C,SAAL,CAAe/D,UAAf,CAA0B,MAA1B,EAAkC,KAAK0G,MAAL,IAAe,EAAjD,EAAqD,IAArD;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIT,UAAU,CAACU,SAAS,GAAG,KAAb,EAAoB;IAC1B;;IACA;IACA,MAAMjB,IAAI,GAAG,IAAb,CAH0B,CAI1B;;IACA,IAAI,KAAKgB,MAAL,IAAe,KAAKA,MAAL,KAAgB,EAAnC,EAAuC;MACnC,KAAK9E,SAAL,GAAiB,KAAK8E,MAAtB;;MACA,IAAI,KAAKrE,cAAT,EAAyB;QACrB;QACA,MAAMuE,IAAI,GAAG,KAAKF,MAAlB,CAFqB,CAGrB;;QACA,IAAIE,IAAJ,EAAU;UACN,KAAK,MAAM1D,IAAX,IAAmB0D,IAAnB,EAAyB;YACrB,IAAIA,IAAI,CAACC,cAAL,CAAoB3D,IAApB,KAA6BA,IAAI,KAAK,KAAKvB,eAA/C,EAAgE;cAC5D,KAAKoC,SAAL,CAAeb,IAAf,CAAoBA,IAApB,EAA0B0D,IAAI,CAAC1D,IAAD,CAA9B;YACH;UACJ;;UACD,IAAI0D,IAAI,CAACC,cAAL,CAAoB,KAAKlF,eAAzB,CAAJ,EAA+C;YAC3C,KAAKoC,SAAL,CAAe,CAAf,EAAkBwB,SAAlB,GAA8BqB,IAAI,CAAC,KAAKjF,eAAN,CAAlC;UACH;QACJ;MACJ,CAdD,MAeK;QACD+D,IAAI,CAACe,OAAL;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;;;EACIxC,aAAa,GAAG;IACZ,IAAI,KAAKP,kBAAT,EAA6B;MACzB,KAAKsC,OAAL,CAAac,GAAb,CAAiB,OAAjB;;MACA,KAAK/C,SAAL,CAAe/D,UAAf,CAA0B,SAA1B,EAFyB,CAEa;;;MACtC,KAAK0D,kBAAL,GAA0B,KAA1B;IACH;EACJ,CA7VwB,CA8VzB;EACA;EACA;EACA;EACA;EACA;;EACA;AACJ;AACA;AACA;AACA;;;EACIZ,WAAW,CAACD,KAAD,EAAQ;IACf,OAAOlE,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,IAAI,KAAK8C,QAAL,CAAcsF,eAAlB,EAAmC;QAC/B,KAAKzF,WAAL,CAAiB0B,IAAjB,CAAsB;UAAEgE,SAAS,EAAE;QAAb,CAAtB;QACA;;QACA,MAAMC,QAAQ,GAAG,EAAjB;;QACA,KAAK,MAAMC,IAAX,IAAmBrE,KAAnB,EAA0B;UACtB;UACA,MAAM0D,IAAI,GAAG,IAAIY,QAAJ,EAAb;UACAZ,IAAI,CAACa,MAAL,CAAY,OAAZ,EAAqBF,IAArB;UACA;;UACA,MAAMG,GAAG,GAAG,KAAKjG,IAAL,CACPkG,IADO,CACF,KAAK7F,QAAL,CAAcsF,eADZ,EAC6BR,IAD7B,EACmC,KAAK9E,QAAL,CAAc8F,yBADjD,EAEPC,IAFO,CAEFhI,GAAG;UAAE;AACnC;AACA;AACA;UACqBiI,QAAD,IAAcA,QAAQ,IAAI,OAAOA,QAAQ,CAACC,IAAhB,KAAyB,QAArC,IAAiDD,QAAQ,CAACC,IAJ3D,CAFD,CAAZ;UAOAT,QAAQ,CAACU,IAAT,CAAcN,GAAd;QACH;;QACD,KAAKnD,SAAL,GAAiB3E,aAAa,CAAC0H,QAAD,CAAb,CAAwBW,SAAxB;QAAmC;AACpE;AACA;AACA;QACiBC,WAAD,IAAiB;UACb,KAAK,MAAMC,UAAX,IAAyBD,WAAzB,EAAsC;YAClC,KAAK9D,SAAL,CAAe/D,UAAf,CAA0B,aAA1B,EAAyC8H,UAAzC;UACH;;UACD,KAAKxG,WAAL,CAAiB0B,IAAjB,CAAsB;YAAEgE,SAAS,EAAE;UAAb,CAAtB;QACH,CATgB;QASZ;AACrB;AACA;AACA;QACgBe,GAAG,IAAI,KAAKC,iBAAL,CAAuBnF,KAAvB,CAbU,CAAjB;MAcH,CAhCD,MAiCK;QACD,KAAKmF,iBAAL,CAAuBnF,KAAvB;MACH;IACJ,CArCe,CAAhB;EAsCH;EACD;AACJ;AACA;AACA;;;EACImF,iBAAiB,CAACnF,KAAD,EAAQ;IACrB,KAAK,MAAMqE,IAAX,IAAmBrE,KAAnB,EAA0B;MACtB;MACA,MAAMoF,MAAM,GAAG,IAAIC,UAAJ,EAAf;MACAD,MAAM,CAACE,aAAP,CAAqBjB,IAArB;;MACAe,MAAM,CAACG,MAAP;MAAiB;AAC7B;AACA;MACY,MAAM;QACF,KAAKrE,SAAL,CAAe/D,UAAf,CAA0B,aAA1B,EAAyCiI,MAAM,CAACI,MAAhD;;QACA,KAAK/G,WAAL,CAAiB0B,IAAjB,CAAsB;UAAEgE,SAAS,EAAE,KAAb;UAAoBsB,QAAQ,EAAE;QAA9B,CAAtB;MACH,CAND;;MAOAL,MAAM,CAACM,OAAP;MAAkB;AAC9B;AACA;AACA;MACYpC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAJT;IAKH;EACJ;;AAvawB;;AAya7BnF,sBAAsB,CAACwH,IAAvB,GAA8B,SAASC,8BAAT,CAAwCC,CAAxC,EAA2C;EAAE,OAAO,KAAKA,CAAC,IAAI1H,sBAAV,EAAkCvB,MAAM,CAACkJ,iBAAP,CAAyBlJ,MAAM,CAACT,UAAhC,CAAlC,EAA+ES,MAAM,CAACkJ,iBAAP,CAAyBlJ,MAAM,CAACR,MAAhC,CAA/E,EAAwHQ,MAAM,CAACkJ,iBAAP,CAAyBjJ,MAAM,CAACd,UAAhC,CAAxH,CAAP;AAA8K,CAAzP;;AACAoC,sBAAsB,CAAC4H,IAAvB,GAA8B,aAAcnJ,MAAM,CAACoJ,iBAAP,CAAyB;EAAEC,IAAI,EAAE9H,sBAAR;EAAgC+H,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,CAA3C;EAAwEC,MAAM,EAAE;IAAE1G,aAAa,EAAE,eAAjB;IAAkCa,eAAe,EAAE,iBAAnD;IAAsEQ,qBAAqB,EAAE;EAA7F,CAAhF;EAAwMsF,OAAO,EAAE;IAAE5H,qBAAqB,EAAE,uBAAzB;IAAkDC,WAAW,EAAE,aAA/D;IAA8EC,WAAW,EAAE,aAA3F;IAA0GC,IAAI,EAAE;EAAhH,CAAjN;EAA2U0H,QAAQ,EAAE,CAACzJ,MAAM,CAAC0J,kBAAP,CAA0B,CACza;IACIC,OAAO,EAAE9J,iBADb;IAEI+J,WAAW,EAAEtK,UAAU;IAAG;AAC1C;AACA;IAAmB,MAAMiC,sBAFc,CAF3B;IAKIsI,KAAK,EAAE;EALX,CADya,CAA1B,CAAD,EAQ9Y7J,MAAM,CAAC8J,oBARuY;AAArV,CAAzB,CAA5C;AASA;;AACAvI,sBAAsB,CAACwI,cAAvB,GAAwC,MAAM,CAC1C;EAAEV,IAAI,EAAE9J;AAAR,CAD0C,EAE1C;EAAE8J,IAAI,EAAE7J;AAAR,CAF0C,EAG1C;EAAE6J,IAAI,EAAElK;AAAR,CAH0C,CAA9C;;AAKAoC,sBAAsB,CAACyI,cAAvB,GAAwC;EACpCnH,aAAa,EAAE,CAAC;IAAEwG,IAAI,EAAE5J;EAAR,CAAD,CADqB;EAEpCiE,eAAe,EAAE,CAAC;IAAE2F,IAAI,EAAE5J;EAAR,CAAD,CAFmB;EAGpCmC,qBAAqB,EAAE,CAAC;IAAEyH,IAAI,EAAE3J;EAAR,CAAD,CAHa;EAIpCmC,WAAW,EAAE,CAAC;IAAEwH,IAAI,EAAE3J;EAAR,CAAD,CAJuB;EAKpCoC,WAAW,EAAE,CAAC;IAAEuH,IAAI,EAAE3J;EAAR,CAAD,CALuB;EAMpCqC,IAAI,EAAE,CAAC;IAAEsH,IAAI,EAAE3J;EAAR,CAAD,CAN8B;EAOpCwE,qBAAqB,EAAE,CAAC;IAAEmF,IAAI,EAAE5J;EAAR,CAAD;AAPa,CAAxC;;AASA,CAAC,YAAY;EAAE,CAAC,OAAOwK,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjK,MAAM,CAACkK,iBAAP,CAAyB3I,sBAAzB,EAAiD,CAAC;IAC5G8H,IAAI,EAAEhK,SADsG;IAE5G8K,IAAI,EAAE,CAAC;MACC;MACAC,QAAQ,EAAE,iBAFX;MAGCC,SAAS,EAAE,CACP;QACIV,OAAO,EAAE9J,iBADb;QAEI+J,WAAW,EAAEtK,UAAU;QAAG;AAClD;AACA;QAA2B,MAAMiC,sBAFc,CAF3B;QAKIsI,KAAK,EAAE;MALX,CADO;IAHZ,CAAD;EAFsG,CAAD,CAAjD,EAe1D,YAAY;IAAE,OAAO,CAAC;MAAER,IAAI,EAAErJ,MAAM,CAACT;IAAf,CAAD,EAA8B;MAAE8J,IAAI,EAAErJ,MAAM,CAACR;IAAf,CAA9B,EAAuD;MAAE6J,IAAI,EAAEpJ,MAAM,CAACd;IAAf,CAAvD,CAAP;EAA6F,CAfjD,EAemD;IAAEyC,qBAAqB,EAAE,CAAC;MACnIyH,IAAI,EAAE3J;IAD6H,CAAD,CAAzB;IAEzGmC,WAAW,EAAE,CAAC;MACdwH,IAAI,EAAE3J;IADQ,CAAD,CAF4F;IAIzGoC,WAAW,EAAE,CAAC;MACduH,IAAI,EAAE3J;IADQ,CAAD,CAJ4F;IAMzGqC,IAAI,EAAE,CAAC;MACPsH,IAAI,EAAE3J;IADC,CAAD,CANmG;IAQzGmD,aAAa,EAAE,CAAC;MAChBwG,IAAI,EAAE5J;IADU,CAAD,CAR0F;IAUzGiE,eAAe,EAAE,CAAC;MAClB2F,IAAI,EAAE5J;IADY,CAAD,CAVwF;IAYzGyE,qBAAqB,EAAE,CAAC;MACxBmF,IAAI,EAAE5J;IADkB,CAAD;EAZkF,CAfnD,CAAnD;AA6BC,CA7BhB;;AA8BA,IAAI,KAAJ,EAAW;EACP;EACA8B,sBAAsB,CAAC+I,SAAvB,CAAiC1I,qBAAjC;EACA;;EACAL,sBAAsB,CAAC+I,SAAvB,CAAiCzI,WAAjC;EACA;;EACAN,sBAAsB,CAAC+I,SAAvB,CAAiCxI,WAAjC;EACA;;EACAP,sBAAsB,CAAC+I,SAAvB,CAAiCvI,IAAjC;EACA;;EACAR,sBAAsB,CAAC+I,SAAvB,CAAiCpG,qBAAjC;EACA;AACJ;AACA;AACA;;EACI3C,sBAAsB,CAAC+I,SAAvB,CAAiCtI,QAAjC;EACA;AACJ;AACA;AACA;;EACIT,sBAAsB,CAAC+I,SAAvB,CAAiCrI,YAAjC;EACA;AACJ;AACA;AACA;;EACIV,sBAAsB,CAAC+I,SAAvB,CAAiCpI,eAAjC;EACA;AACJ;AACA;AACA;;EACIX,sBAAsB,CAAC+I,SAAvB,CAAiC1H,cAAjC;EACA;AACJ;AACA;AACA;;EACIrB,sBAAsB,CAAC+I,SAAvB,CAAiChG,SAAjC;EACA;AACJ;AACA;AACA;;EACI/C,sBAAsB,CAAC+I,SAAvB,CAAiC/D,OAAjC;EACA;AACJ;AACA;AACA;;EACIhF,sBAAsB,CAAC+I,SAAvB,CAAiCrD,MAAjC;EACA;AACJ;AACA;AACA;;EACI1F,sBAAsB,CAAC+I,SAAvB,CAAiCnI,SAAjC;EACA;AACJ;AACA;AACA;;EACIZ,sBAAsB,CAAC+I,SAAvB,CAAiCrG,kBAAjC;EACA;AACJ;AACA;AACA;;EACI1C,sBAAsB,CAAC+I,SAAvB,CAAiC7F,SAAjC;EACA;;EACAlD,sBAAsB,CAAC+I,SAAvB,CAAiClI,QAAjC;EACA;;EACAb,sBAAsB,CAAC+I,SAAvB,CAAiChI,SAAjC;EACA;AACJ;AACA;AACA;;EACIf,sBAAsB,CAAC+I,SAAvB,CAAiC7I,EAAjC;EACA;AACJ;AACA;AACA;;EACIF,sBAAsB,CAAC+I,SAAvB,CAAiC5I,IAAjC;EACA;AACJ;AACA;AACA;;EACIH,sBAAsB,CAAC+I,SAAvB,CAAiC3I,IAAjC;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,MAAM4I,0BAAN,CAAiC;EAC7B;AACJ;AACA;AACA;EACI/I,WAAW,CAACgJ,SAAD,EAAYjI,OAAZ,EAAqB;IAC5B,KAAKiI,SAAL,GAAiBA,SAAjB;IACA,KAAKC,QAAL,GAAgBlI,OAAO,CAACC,aAAxB;EACH;EACD;AACJ;AACA;AACA;;;EACyB,IAAjBkI,iBAAiB,CAAC/G,OAAD,EAAU;IAC3B,KAAK8G,QAAL,CAAc3E,SAAd,GAA0BnC,OAAO,IAAI,EAArC;EACH;EACD;AACJ;AACA;;;EACIgH,eAAe,GAAG;IACd,KAAKH,SAAL,CAAeI,QAAf,CAAwB,KAAKH,QAA7B,EAAuC,qBAAvC;EACH;;AArB4B;;AAuBjCF,0BAA0B,CAACxB,IAA3B,GAAkC,SAAS8B,kCAAT,CAA4C5B,CAA5C,EAA+C;EAAE,OAAO,KAAKA,CAAC,IAAIsB,0BAAV,EAAsCvK,MAAM,CAACkJ,iBAAP,CAAyBlJ,MAAM,CAACL,SAAhC,CAAtC,EAAkFK,MAAM,CAACkJ,iBAAP,CAAyBlJ,MAAM,CAACT,UAAhC,CAAlF,CAAP;AAAwI,CAA3N;;AACAgL,0BAA0B,CAACpB,IAA3B,GAAkC,aAAcnJ,MAAM,CAACoJ,iBAAP,CAAyB;EAAEC,IAAI,EAAEkB,0BAAR;EAAoCjB,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,CAA/C;EAAgFC,MAAM,EAAE;IAAEmB,iBAAiB,EAAE;EAArB;AAAxF,CAAzB,CAAhD;AACA;;AACAH,0BAA0B,CAACR,cAA3B,GAA4C,MAAM,CAC9C;EAAEV,IAAI,EAAE1J;AAAR,CAD8C,EAE9C;EAAE0J,IAAI,EAAE9J;AAAR,CAF8C,CAAlD;;AAIAgL,0BAA0B,CAACP,cAA3B,GAA4C;EACxCU,iBAAiB,EAAE,CAAC;IAAErB,IAAI,EAAE5J;EAAR,CAAD;AADqB,CAA5C;;AAGA,CAAC,YAAY;EAAE,CAAC,OAAOwK,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjK,MAAM,CAACkK,iBAAP,CAAyBK,0BAAzB,EAAqD,CAAC;IAChHlB,IAAI,EAAEhK,SAD0G;IAEhH8K,IAAI,EAAE,CAAC;MACC;MACAC,QAAQ,EAAE;IAFX,CAAD;EAF0G,CAAD,CAArD,EAM1D,YAAY;IAAE,OAAO,CAAC;MAAEf,IAAI,EAAErJ,MAAM,CAACL;IAAf,CAAD,EAA6B;MAAE0J,IAAI,EAAErJ,MAAM,CAACT;IAAf,CAA7B,CAAP;EAAmE,CANvB,EAMyB;IAAEmL,iBAAiB,EAAE,CAAC;MACrGrB,IAAI,EAAE5J;IAD+F,CAAD;EAArB,CANzB,CAAnD;AAQC,CARhB;;AASA,IAAI,KAAJ,EAAW;EACP;AACJ;AACA;AACA;EACI8K,0BAA0B,CAACD,SAA3B,CAAqCG,QAArC;EACA;AACJ;AACA;AACA;;EACIF,0BAA0B,CAACD,SAA3B,CAAqCE,SAArC;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,MAAMM,mBAAN,CAA0B;EACtB;AACJ;AACA;EACkB,OAAPC,OAAO,GAAG;IACb,OAAO;MAAEC,QAAQ,EAAEF,mBAAZ;MAAiCT,SAAS,EAAE;IAA5C,CAAP;EACH;;AANqB;;AAQ1BS,mBAAmB,CAAC/B,IAApB,GAA2B,SAASkC,2BAAT,CAAqChC,CAArC,EAAwC;EAAE,OAAO,KAAKA,CAAC,IAAI6B,mBAAV,GAAP;AAA0C,CAA/G;;AACAA,mBAAmB,CAACI,IAApB,GAA2B,aAAclL,MAAM,CAACmL,gBAAP,CAAwB;EAAE9B,IAAI,EAAEyB;AAAR,CAAxB,CAAzC;AACAA,mBAAmB,CAACM,IAApB,GAA2B,aAAcpL,MAAM,CAACqL,gBAAP,CAAwB,EAAxB,CAAzC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOpB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjK,MAAM,CAACkK,iBAAP,CAAyBY,mBAAzB,EAA8C,CAAC;IACzGzB,IAAI,EAAEzJ,QADmG;IAEzGuK,IAAI,EAAE,CAAC;MACCmB,YAAY,EAAE,CACV/J,sBADU,EAEVgJ,0BAFU,CADf;MAKCgB,OAAO,EAAE,CACLhK,sBADK,EAELgJ,0BAFK;IALV,CAAD;EAFmG,CAAD,CAA9C,EAY1D,IAZ0D,EAYpD,IAZoD,CAAnD;AAYO,CAZtB;;AAaA,CAAC,YAAY;EAAE,CAAC,OAAOiB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDxL,MAAM,CAACyL,kBAAP,CAA0BX,mBAA1B,EAA+C;IAAEQ,YAAY,EAAE,CAAC/J,sBAAD,EAAyBgJ,0BAAzB,CAAhB;IAAsEgB,OAAO,EAAE,CAAChK,sBAAD,EAAyBgJ,0BAAzB;EAA/E,CAA/C,CAAnD;AAA2O,CAA1P;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAEA,SAAShJ,sBAAT,EAAiCuJ,mBAAjC,EAAsDP,0BAAtD,EAAkFpK,eAAlF"},"metadata":{},"sourceType":"module"}